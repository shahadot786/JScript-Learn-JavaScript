// Generated by view binder compiler. Do not edit!
package com.javascript.jscript.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.core.widget.NestedScrollView;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.airbnb.lottie.LottieAnimationView;
import com.applovin.mediation.ads.MaxAdView;
import com.cooltechworks.views.shimmer.ShimmerRecyclerView;
import com.javascript.jscript.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDiscussDetailsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaxAdView adView;

  @NonNull
  public final AppCompatTextView comment;

  @NonNull
  public final EditText commentET;

  @NonNull
  public final ImageView commentPostBtn;

  @NonNull
  public final ShimmerRecyclerView commentRv;

  @NonNull
  public final TextView descriptions;

  @NonNull
  public final ImageView likes;

  @NonNull
  public final TextView likesCount;

  @NonNull
  public final LottieAnimationView likesLoves;

  @NonNull
  public final NestedScrollView nestedScrollView2;

  @NonNull
  public final ImageView proBadge;

  @NonNull
  public final CircleImageView profileImage;

  @NonNull
  public final View profileView;

  @NonNull
  public final TextView question;

  @NonNull
  public final ImageView savedQuestions;

  @NonNull
  public final AppCompatTextView share;

  @NonNull
  public final SwipeRefreshLayout swipeRefreshComment;

  @NonNull
  public final TextView time;

  @NonNull
  public final Toolbar toolbar2;

  @NonNull
  public final TextView userName;

  @NonNull
  public final View view11;

  @NonNull
  public final View view9;

  @NonNull
  public final View viewAd;

  @NonNull
  public final AppCompatTextView views;

  private ActivityDiscussDetailsBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaxAdView adView, @NonNull AppCompatTextView comment, @NonNull EditText commentET,
      @NonNull ImageView commentPostBtn, @NonNull ShimmerRecyclerView commentRv,
      @NonNull TextView descriptions, @NonNull ImageView likes, @NonNull TextView likesCount,
      @NonNull LottieAnimationView likesLoves, @NonNull NestedScrollView nestedScrollView2,
      @NonNull ImageView proBadge, @NonNull CircleImageView profileImage, @NonNull View profileView,
      @NonNull TextView question, @NonNull ImageView savedQuestions,
      @NonNull AppCompatTextView share, @NonNull SwipeRefreshLayout swipeRefreshComment,
      @NonNull TextView time, @NonNull Toolbar toolbar2, @NonNull TextView userName,
      @NonNull View view11, @NonNull View view9, @NonNull View viewAd,
      @NonNull AppCompatTextView views) {
    this.rootView = rootView;
    this.adView = adView;
    this.comment = comment;
    this.commentET = commentET;
    this.commentPostBtn = commentPostBtn;
    this.commentRv = commentRv;
    this.descriptions = descriptions;
    this.likes = likes;
    this.likesCount = likesCount;
    this.likesLoves = likesLoves;
    this.nestedScrollView2 = nestedScrollView2;
    this.proBadge = proBadge;
    this.profileImage = profileImage;
    this.profileView = profileView;
    this.question = question;
    this.savedQuestions = savedQuestions;
    this.share = share;
    this.swipeRefreshComment = swipeRefreshComment;
    this.time = time;
    this.toolbar2 = toolbar2;
    this.userName = userName;
    this.view11 = view11;
    this.view9 = view9;
    this.viewAd = viewAd;
    this.views = views;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDiscussDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDiscussDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_discuss_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDiscussDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.adView;
      MaxAdView adView = ViewBindings.findChildViewById(rootView, id);
      if (adView == null) {
        break missingId;
      }

      id = R.id.comment;
      AppCompatTextView comment = ViewBindings.findChildViewById(rootView, id);
      if (comment == null) {
        break missingId;
      }

      id = R.id.commentET;
      EditText commentET = ViewBindings.findChildViewById(rootView, id);
      if (commentET == null) {
        break missingId;
      }

      id = R.id.commentPostBtn;
      ImageView commentPostBtn = ViewBindings.findChildViewById(rootView, id);
      if (commentPostBtn == null) {
        break missingId;
      }

      id = R.id.commentRv;
      ShimmerRecyclerView commentRv = ViewBindings.findChildViewById(rootView, id);
      if (commentRv == null) {
        break missingId;
      }

      id = R.id.descriptions;
      TextView descriptions = ViewBindings.findChildViewById(rootView, id);
      if (descriptions == null) {
        break missingId;
      }

      id = R.id.likes;
      ImageView likes = ViewBindings.findChildViewById(rootView, id);
      if (likes == null) {
        break missingId;
      }

      id = R.id.likesCount;
      TextView likesCount = ViewBindings.findChildViewById(rootView, id);
      if (likesCount == null) {
        break missingId;
      }

      id = R.id.likes_loves;
      LottieAnimationView likesLoves = ViewBindings.findChildViewById(rootView, id);
      if (likesLoves == null) {
        break missingId;
      }

      id = R.id.nestedScrollView2;
      NestedScrollView nestedScrollView2 = ViewBindings.findChildViewById(rootView, id);
      if (nestedScrollView2 == null) {
        break missingId;
      }

      id = R.id.proBadge;
      ImageView proBadge = ViewBindings.findChildViewById(rootView, id);
      if (proBadge == null) {
        break missingId;
      }

      id = R.id.profileImage;
      CircleImageView profileImage = ViewBindings.findChildViewById(rootView, id);
      if (profileImage == null) {
        break missingId;
      }

      id = R.id.profileView;
      View profileView = ViewBindings.findChildViewById(rootView, id);
      if (profileView == null) {
        break missingId;
      }

      id = R.id.question;
      TextView question = ViewBindings.findChildViewById(rootView, id);
      if (question == null) {
        break missingId;
      }

      id = R.id.savedQuestions;
      ImageView savedQuestions = ViewBindings.findChildViewById(rootView, id);
      if (savedQuestions == null) {
        break missingId;
      }

      id = R.id.share;
      AppCompatTextView share = ViewBindings.findChildViewById(rootView, id);
      if (share == null) {
        break missingId;
      }

      id = R.id.swipeRefreshComment;
      SwipeRefreshLayout swipeRefreshComment = ViewBindings.findChildViewById(rootView, id);
      if (swipeRefreshComment == null) {
        break missingId;
      }

      id = R.id.time;
      TextView time = ViewBindings.findChildViewById(rootView, id);
      if (time == null) {
        break missingId;
      }

      id = R.id.toolbar2;
      Toolbar toolbar2 = ViewBindings.findChildViewById(rootView, id);
      if (toolbar2 == null) {
        break missingId;
      }

      id = R.id.userName;
      TextView userName = ViewBindings.findChildViewById(rootView, id);
      if (userName == null) {
        break missingId;
      }

      id = R.id.view11;
      View view11 = ViewBindings.findChildViewById(rootView, id);
      if (view11 == null) {
        break missingId;
      }

      id = R.id.view9;
      View view9 = ViewBindings.findChildViewById(rootView, id);
      if (view9 == null) {
        break missingId;
      }

      id = R.id.viewAd;
      View viewAd = ViewBindings.findChildViewById(rootView, id);
      if (viewAd == null) {
        break missingId;
      }

      id = R.id.views;
      AppCompatTextView views = ViewBindings.findChildViewById(rootView, id);
      if (views == null) {
        break missingId;
      }

      return new ActivityDiscussDetailsBinding((ConstraintLayout) rootView, adView, comment,
          commentET, commentPostBtn, commentRv, descriptions, likes, likesCount, likesLoves,
          nestedScrollView2, proBadge, profileImage, profileView, question, savedQuestions, share,
          swipeRefreshComment, time, toolbar2, userName, view11, view9, viewAd, views);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
