// Generated by view binder compiler. Do not edit!
package com.javascript.jscript.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.applovin.mediation.ads.MaxAdView;
import com.javascript.jscript.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import thereisnospon.codeview.CodeView;

public final class ActivityLearnDetailsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaxAdView adView;

  @NonNull
  public final ConstraintLayout changeTopics;

  @NonNull
  public final View codeView;

  @NonNull
  public final EditText codesET;

  @NonNull
  public final TextView codesRun;

  @NonNull
  public final TextView codesText;

  @NonNull
  public final ConstraintLayout detailsC;

  @NonNull
  public final TextView learnDetails;

  @NonNull
  public final AppCompatButton learnNextBtn;

  @NonNull
  public final CodeView learnOutputView;

  @NonNull
  public final AppCompatButton learnPrevBtn;

  @NonNull
  public final AppCompatButton learnShareBtn;

  @NonNull
  public final TextView learnTitle;

  @NonNull
  public final TextView output;

  @NonNull
  public final CodeView questionDes;

  @NonNull
  public final ConstraintLayout titleC;

  @NonNull
  public final Toolbar toolbar2;

  @NonNull
  public final ConstraintLayout writeCode;

  private ActivityLearnDetailsBinding(@NonNull ConstraintLayout rootView, @NonNull MaxAdView adView,
      @NonNull ConstraintLayout changeTopics, @NonNull View codeView, @NonNull EditText codesET,
      @NonNull TextView codesRun, @NonNull TextView codesText, @NonNull ConstraintLayout detailsC,
      @NonNull TextView learnDetails, @NonNull AppCompatButton learnNextBtn,
      @NonNull CodeView learnOutputView, @NonNull AppCompatButton learnPrevBtn,
      @NonNull AppCompatButton learnShareBtn, @NonNull TextView learnTitle,
      @NonNull TextView output, @NonNull CodeView questionDes, @NonNull ConstraintLayout titleC,
      @NonNull Toolbar toolbar2, @NonNull ConstraintLayout writeCode) {
    this.rootView = rootView;
    this.adView = adView;
    this.changeTopics = changeTopics;
    this.codeView = codeView;
    this.codesET = codesET;
    this.codesRun = codesRun;
    this.codesText = codesText;
    this.detailsC = detailsC;
    this.learnDetails = learnDetails;
    this.learnNextBtn = learnNextBtn;
    this.learnOutputView = learnOutputView;
    this.learnPrevBtn = learnPrevBtn;
    this.learnShareBtn = learnShareBtn;
    this.learnTitle = learnTitle;
    this.output = output;
    this.questionDes = questionDes;
    this.titleC = titleC;
    this.toolbar2 = toolbar2;
    this.writeCode = writeCode;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLearnDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLearnDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_learn_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLearnDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.adView;
      MaxAdView adView = ViewBindings.findChildViewById(rootView, id);
      if (adView == null) {
        break missingId;
      }

      id = R.id.changeTopics;
      ConstraintLayout changeTopics = ViewBindings.findChildViewById(rootView, id);
      if (changeTopics == null) {
        break missingId;
      }

      id = R.id.codeView;
      View codeView = ViewBindings.findChildViewById(rootView, id);
      if (codeView == null) {
        break missingId;
      }

      id = R.id.codesET;
      EditText codesET = ViewBindings.findChildViewById(rootView, id);
      if (codesET == null) {
        break missingId;
      }

      id = R.id.codesRun;
      TextView codesRun = ViewBindings.findChildViewById(rootView, id);
      if (codesRun == null) {
        break missingId;
      }

      id = R.id.codesText;
      TextView codesText = ViewBindings.findChildViewById(rootView, id);
      if (codesText == null) {
        break missingId;
      }

      id = R.id.detailsC;
      ConstraintLayout detailsC = ViewBindings.findChildViewById(rootView, id);
      if (detailsC == null) {
        break missingId;
      }

      id = R.id.learnDetails;
      TextView learnDetails = ViewBindings.findChildViewById(rootView, id);
      if (learnDetails == null) {
        break missingId;
      }

      id = R.id.learnNextBtn;
      AppCompatButton learnNextBtn = ViewBindings.findChildViewById(rootView, id);
      if (learnNextBtn == null) {
        break missingId;
      }

      id = R.id.learnOutputView;
      CodeView learnOutputView = ViewBindings.findChildViewById(rootView, id);
      if (learnOutputView == null) {
        break missingId;
      }

      id = R.id.learnPrevBtn;
      AppCompatButton learnPrevBtn = ViewBindings.findChildViewById(rootView, id);
      if (learnPrevBtn == null) {
        break missingId;
      }

      id = R.id.learnShareBtn;
      AppCompatButton learnShareBtn = ViewBindings.findChildViewById(rootView, id);
      if (learnShareBtn == null) {
        break missingId;
      }

      id = R.id.learnTitle;
      TextView learnTitle = ViewBindings.findChildViewById(rootView, id);
      if (learnTitle == null) {
        break missingId;
      }

      id = R.id.output;
      TextView output = ViewBindings.findChildViewById(rootView, id);
      if (output == null) {
        break missingId;
      }

      id = R.id.questionDes;
      CodeView questionDes = ViewBindings.findChildViewById(rootView, id);
      if (questionDes == null) {
        break missingId;
      }

      id = R.id.titleC;
      ConstraintLayout titleC = ViewBindings.findChildViewById(rootView, id);
      if (titleC == null) {
        break missingId;
      }

      id = R.id.toolbar2;
      Toolbar toolbar2 = ViewBindings.findChildViewById(rootView, id);
      if (toolbar2 == null) {
        break missingId;
      }

      id = R.id.writeCode;
      ConstraintLayout writeCode = ViewBindings.findChildViewById(rootView, id);
      if (writeCode == null) {
        break missingId;
      }

      return new ActivityLearnDetailsBinding((ConstraintLayout) rootView, adView, changeTopics,
          codeView, codesET, codesRun, codesText, detailsC, learnDetails, learnNextBtn,
          learnOutputView, learnPrevBtn, learnShareBtn, learnTitle, output, questionDes, titleC,
          toolbar2, writeCode);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
