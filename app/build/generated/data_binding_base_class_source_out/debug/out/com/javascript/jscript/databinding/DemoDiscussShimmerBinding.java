// Generated by view binder compiler. Do not edit!
package com.javascript.jscript.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.javascript.jscript.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DemoDiscussShimmerBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final View view12;

  @NonNull
  public final View view13;

  @NonNull
  public final View view15;

  @NonNull
  public final View view17;

  @NonNull
  public final View view19;

  @NonNull
  public final View view20;

  @NonNull
  public final View view21;

  @NonNull
  public final View view23;

  private DemoDiscussShimmerBinding(@NonNull RelativeLayout rootView, @NonNull View view12,
      @NonNull View view13, @NonNull View view15, @NonNull View view17, @NonNull View view19,
      @NonNull View view20, @NonNull View view21, @NonNull View view23) {
    this.rootView = rootView;
    this.view12 = view12;
    this.view13 = view13;
    this.view15 = view15;
    this.view17 = view17;
    this.view19 = view19;
    this.view20 = view20;
    this.view21 = view21;
    this.view23 = view23;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DemoDiscussShimmerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DemoDiscussShimmerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.demo_discuss_shimmer, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DemoDiscussShimmerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.view12;
      View view12 = ViewBindings.findChildViewById(rootView, id);
      if (view12 == null) {
        break missingId;
      }

      id = R.id.view13;
      View view13 = ViewBindings.findChildViewById(rootView, id);
      if (view13 == null) {
        break missingId;
      }

      id = R.id.view15;
      View view15 = ViewBindings.findChildViewById(rootView, id);
      if (view15 == null) {
        break missingId;
      }

      id = R.id.view17;
      View view17 = ViewBindings.findChildViewById(rootView, id);
      if (view17 == null) {
        break missingId;
      }

      id = R.id.view19;
      View view19 = ViewBindings.findChildViewById(rootView, id);
      if (view19 == null) {
        break missingId;
      }

      id = R.id.view20;
      View view20 = ViewBindings.findChildViewById(rootView, id);
      if (view20 == null) {
        break missingId;
      }

      id = R.id.view21;
      View view21 = ViewBindings.findChildViewById(rootView, id);
      if (view21 == null) {
        break missingId;
      }

      id = R.id.view23;
      View view23 = ViewBindings.findChildViewById(rootView, id);
      if (view23 == null) {
        break missingId;
      }

      return new DemoDiscussShimmerBinding((RelativeLayout) rootView, view12, view13, view15,
          view17, view19, view20, view21, view23);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
