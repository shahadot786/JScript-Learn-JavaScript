// Generated by view binder compiler. Do not edit!
package com.javascript.jscript.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.airbnb.lottie.LottieAnimationView;
import com.javascript.jscript.R;
import com.javascript.jscript.Utils.ExpandableHeightGridView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentProgramsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final View ProgramsProView;

  @NonNull
  public final FrameLayout nativeAdLayout;

  @NonNull
  public final ConstraintLayout proAnimation;

  @NonNull
  public final LottieAnimationView proImage;

  @NonNull
  public final TextView proText;

  @NonNull
  public final View proView;

  @NonNull
  public final ExpandableHeightGridView programsItemGridview;

  @NonNull
  public final ExpandableHeightGridView programsItemGridviewPro;

  @NonNull
  public final LottieAnimationView programsProImage;

  @NonNull
  public final ImageView sliderView;

  @NonNull
  public final TextView textView8;

  @NonNull
  public final LottieAnimationView tryPro;

  @NonNull
  public final View view2;

  private FragmentProgramsBinding(@NonNull ConstraintLayout rootView, @NonNull View ProgramsProView,
      @NonNull FrameLayout nativeAdLayout, @NonNull ConstraintLayout proAnimation,
      @NonNull LottieAnimationView proImage, @NonNull TextView proText, @NonNull View proView,
      @NonNull ExpandableHeightGridView programsItemGridview,
      @NonNull ExpandableHeightGridView programsItemGridviewPro,
      @NonNull LottieAnimationView programsProImage, @NonNull ImageView sliderView,
      @NonNull TextView textView8, @NonNull LottieAnimationView tryPro, @NonNull View view2) {
    this.rootView = rootView;
    this.ProgramsProView = ProgramsProView;
    this.nativeAdLayout = nativeAdLayout;
    this.proAnimation = proAnimation;
    this.proImage = proImage;
    this.proText = proText;
    this.proView = proView;
    this.programsItemGridview = programsItemGridview;
    this.programsItemGridviewPro = programsItemGridviewPro;
    this.programsProImage = programsProImage;
    this.sliderView = sliderView;
    this.textView8 = textView8;
    this.tryPro = tryPro;
    this.view2 = view2;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentProgramsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentProgramsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_programs, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentProgramsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ProgramsProView;
      View ProgramsProView = ViewBindings.findChildViewById(rootView, id);
      if (ProgramsProView == null) {
        break missingId;
      }

      id = R.id.native_ad_layout;
      FrameLayout nativeAdLayout = ViewBindings.findChildViewById(rootView, id);
      if (nativeAdLayout == null) {
        break missingId;
      }

      id = R.id.proAnimation;
      ConstraintLayout proAnimation = ViewBindings.findChildViewById(rootView, id);
      if (proAnimation == null) {
        break missingId;
      }

      id = R.id.proImage;
      LottieAnimationView proImage = ViewBindings.findChildViewById(rootView, id);
      if (proImage == null) {
        break missingId;
      }

      id = R.id.proText;
      TextView proText = ViewBindings.findChildViewById(rootView, id);
      if (proText == null) {
        break missingId;
      }

      id = R.id.proView;
      View proView = ViewBindings.findChildViewById(rootView, id);
      if (proView == null) {
        break missingId;
      }

      id = R.id.programs_item_gridview;
      ExpandableHeightGridView programsItemGridview = ViewBindings.findChildViewById(rootView, id);
      if (programsItemGridview == null) {
        break missingId;
      }

      id = R.id.programs_item_gridview_pro;
      ExpandableHeightGridView programsItemGridviewPro = ViewBindings.findChildViewById(rootView, id);
      if (programsItemGridviewPro == null) {
        break missingId;
      }

      id = R.id.programsProImage;
      LottieAnimationView programsProImage = ViewBindings.findChildViewById(rootView, id);
      if (programsProImage == null) {
        break missingId;
      }

      id = R.id.sliderView;
      ImageView sliderView = ViewBindings.findChildViewById(rootView, id);
      if (sliderView == null) {
        break missingId;
      }

      id = R.id.textView8;
      TextView textView8 = ViewBindings.findChildViewById(rootView, id);
      if (textView8 == null) {
        break missingId;
      }

      id = R.id.tryPro;
      LottieAnimationView tryPro = ViewBindings.findChildViewById(rootView, id);
      if (tryPro == null) {
        break missingId;
      }

      id = R.id.view2;
      View view2 = ViewBindings.findChildViewById(rootView, id);
      if (view2 == null) {
        break missingId;
      }

      return new FragmentProgramsBinding((ConstraintLayout) rootView, ProgramsProView,
          nativeAdLayout, proAnimation, proImage, proText, proView, programsItemGridview,
          programsItemGridviewPro, programsProImage, sliderView, textView8, tryPro, view2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
