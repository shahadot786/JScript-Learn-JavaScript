// Generated by view binder compiler. Do not edit!
package com.javascript.jscript.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.airbnb.lottie.LottieAnimationView;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.javascript.jscript.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySignInBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView dataPolicy;

  @NonNull
  public final TextInputEditText editTextEmail;

  @NonNull
  public final TextInputEditText editTextPassword;

  @NonNull
  public final TextView forgotPassword;

  @NonNull
  public final TextView goToSignUp;

  @NonNull
  public final LottieAnimationView imageView3;

  @NonNull
  public final Button signInBtn;

  @NonNull
  public final TextView signInWithGoogle;

  @NonNull
  public final TextInputLayout textInputEmail;

  @NonNull
  public final TextInputLayout textInputPassword;

  @NonNull
  public final TextView textView3;

  @NonNull
  public final TextView textView5;

  @NonNull
  public final TextView textView8;

  private ActivitySignInBinding(@NonNull ConstraintLayout rootView, @NonNull TextView dataPolicy,
      @NonNull TextInputEditText editTextEmail, @NonNull TextInputEditText editTextPassword,
      @NonNull TextView forgotPassword, @NonNull TextView goToSignUp,
      @NonNull LottieAnimationView imageView3, @NonNull Button signInBtn,
      @NonNull TextView signInWithGoogle, @NonNull TextInputLayout textInputEmail,
      @NonNull TextInputLayout textInputPassword, @NonNull TextView textView3,
      @NonNull TextView textView5, @NonNull TextView textView8) {
    this.rootView = rootView;
    this.dataPolicy = dataPolicy;
    this.editTextEmail = editTextEmail;
    this.editTextPassword = editTextPassword;
    this.forgotPassword = forgotPassword;
    this.goToSignUp = goToSignUp;
    this.imageView3 = imageView3;
    this.signInBtn = signInBtn;
    this.signInWithGoogle = signInWithGoogle;
    this.textInputEmail = textInputEmail;
    this.textInputPassword = textInputPassword;
    this.textView3 = textView3;
    this.textView5 = textView5;
    this.textView8 = textView8;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySignInBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySignInBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_sign_in, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySignInBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.data_policy;
      TextView dataPolicy = ViewBindings.findChildViewById(rootView, id);
      if (dataPolicy == null) {
        break missingId;
      }

      id = R.id.editTextEmail;
      TextInputEditText editTextEmail = ViewBindings.findChildViewById(rootView, id);
      if (editTextEmail == null) {
        break missingId;
      }

      id = R.id.editTextPassword;
      TextInputEditText editTextPassword = ViewBindings.findChildViewById(rootView, id);
      if (editTextPassword == null) {
        break missingId;
      }

      id = R.id.forgotPassword;
      TextView forgotPassword = ViewBindings.findChildViewById(rootView, id);
      if (forgotPassword == null) {
        break missingId;
      }

      id = R.id.goToSignUp;
      TextView goToSignUp = ViewBindings.findChildViewById(rootView, id);
      if (goToSignUp == null) {
        break missingId;
      }

      id = R.id.imageView3;
      LottieAnimationView imageView3 = ViewBindings.findChildViewById(rootView, id);
      if (imageView3 == null) {
        break missingId;
      }

      id = R.id.signInBtn;
      Button signInBtn = ViewBindings.findChildViewById(rootView, id);
      if (signInBtn == null) {
        break missingId;
      }

      id = R.id.signInWithGoogle;
      TextView signInWithGoogle = ViewBindings.findChildViewById(rootView, id);
      if (signInWithGoogle == null) {
        break missingId;
      }

      id = R.id.text_input_email;
      TextInputLayout textInputEmail = ViewBindings.findChildViewById(rootView, id);
      if (textInputEmail == null) {
        break missingId;
      }

      id = R.id.text_input_password;
      TextInputLayout textInputPassword = ViewBindings.findChildViewById(rootView, id);
      if (textInputPassword == null) {
        break missingId;
      }

      id = R.id.textView3;
      TextView textView3 = ViewBindings.findChildViewById(rootView, id);
      if (textView3 == null) {
        break missingId;
      }

      id = R.id.textView5;
      TextView textView5 = ViewBindings.findChildViewById(rootView, id);
      if (textView5 == null) {
        break missingId;
      }

      id = R.id.textView8;
      TextView textView8 = ViewBindings.findChildViewById(rootView, id);
      if (textView8 == null) {
        break missingId;
      }

      return new ActivitySignInBinding((ConstraintLayout) rootView, dataPolicy, editTextEmail,
          editTextPassword, forgotPassword, goToSignUp, imageView3, signInBtn, signInWithGoogle,
          textInputEmail, textInputPassword, textView3, textView5, textView8);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
