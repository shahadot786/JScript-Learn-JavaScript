// Generated by view binder compiler. Do not edit!
package com.javascript.jscript.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.javascript.jscript.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityUpcomingCoursesBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout gatsby;

  @NonNull
  public final ImageView imageView1;

  @NonNull
  public final ImageView imageView26;

  @NonNull
  public final ImageView imageView27;

  @NonNull
  public final ImageView imageView3;

  @NonNull
  public final ImageView imageView5;

  @NonNull
  public final ImageView imageView7;

  @NonNull
  public final ConstraintLayout micronaut;

  @NonNull
  public final ConstraintLayout mocha;

  @NonNull
  public final ConstraintLayout nuxt;

  @NonNull
  public final ConstraintLayout spring;

  @NonNull
  public final Button suggestions;

  @NonNull
  public final ConstraintLayout svelte;

  @NonNull
  public final TextView textView1;

  @NonNull
  public final TextView textView2;

  @NonNull
  public final TextView textView3;

  @NonNull
  public final TextView textView4;

  @NonNull
  public final TextView textView44;

  @NonNull
  public final TextView textView45;

  @NonNull
  public final TextView textView46;

  @NonNull
  public final TextView textView47;

  @NonNull
  public final TextView textView5;

  @NonNull
  public final TextView textView6;

  @NonNull
  public final TextView textView7;

  @NonNull
  public final TextView textView8;

  @NonNull
  public final Toolbar toolbar2;

  private ActivityUpcomingCoursesBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout gatsby, @NonNull ImageView imageView1,
      @NonNull ImageView imageView26, @NonNull ImageView imageView27, @NonNull ImageView imageView3,
      @NonNull ImageView imageView5, @NonNull ImageView imageView7,
      @NonNull ConstraintLayout micronaut, @NonNull ConstraintLayout mocha,
      @NonNull ConstraintLayout nuxt, @NonNull ConstraintLayout spring, @NonNull Button suggestions,
      @NonNull ConstraintLayout svelte, @NonNull TextView textView1, @NonNull TextView textView2,
      @NonNull TextView textView3, @NonNull TextView textView4, @NonNull TextView textView44,
      @NonNull TextView textView45, @NonNull TextView textView46, @NonNull TextView textView47,
      @NonNull TextView textView5, @NonNull TextView textView6, @NonNull TextView textView7,
      @NonNull TextView textView8, @NonNull Toolbar toolbar2) {
    this.rootView = rootView;
    this.gatsby = gatsby;
    this.imageView1 = imageView1;
    this.imageView26 = imageView26;
    this.imageView27 = imageView27;
    this.imageView3 = imageView3;
    this.imageView5 = imageView5;
    this.imageView7 = imageView7;
    this.micronaut = micronaut;
    this.mocha = mocha;
    this.nuxt = nuxt;
    this.spring = spring;
    this.suggestions = suggestions;
    this.svelte = svelte;
    this.textView1 = textView1;
    this.textView2 = textView2;
    this.textView3 = textView3;
    this.textView4 = textView4;
    this.textView44 = textView44;
    this.textView45 = textView45;
    this.textView46 = textView46;
    this.textView47 = textView47;
    this.textView5 = textView5;
    this.textView6 = textView6;
    this.textView7 = textView7;
    this.textView8 = textView8;
    this.toolbar2 = toolbar2;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityUpcomingCoursesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityUpcomingCoursesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_upcoming_courses, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityUpcomingCoursesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.gatsby;
      ConstraintLayout gatsby = ViewBindings.findChildViewById(rootView, id);
      if (gatsby == null) {
        break missingId;
      }

      id = R.id.imageView1;
      ImageView imageView1 = ViewBindings.findChildViewById(rootView, id);
      if (imageView1 == null) {
        break missingId;
      }

      id = R.id.imageView26;
      ImageView imageView26 = ViewBindings.findChildViewById(rootView, id);
      if (imageView26 == null) {
        break missingId;
      }

      id = R.id.imageView27;
      ImageView imageView27 = ViewBindings.findChildViewById(rootView, id);
      if (imageView27 == null) {
        break missingId;
      }

      id = R.id.imageView3;
      ImageView imageView3 = ViewBindings.findChildViewById(rootView, id);
      if (imageView3 == null) {
        break missingId;
      }

      id = R.id.imageView5;
      ImageView imageView5 = ViewBindings.findChildViewById(rootView, id);
      if (imageView5 == null) {
        break missingId;
      }

      id = R.id.imageView7;
      ImageView imageView7 = ViewBindings.findChildViewById(rootView, id);
      if (imageView7 == null) {
        break missingId;
      }

      id = R.id.micronaut;
      ConstraintLayout micronaut = ViewBindings.findChildViewById(rootView, id);
      if (micronaut == null) {
        break missingId;
      }

      id = R.id.mocha;
      ConstraintLayout mocha = ViewBindings.findChildViewById(rootView, id);
      if (mocha == null) {
        break missingId;
      }

      id = R.id.nuxt;
      ConstraintLayout nuxt = ViewBindings.findChildViewById(rootView, id);
      if (nuxt == null) {
        break missingId;
      }

      id = R.id.spring;
      ConstraintLayout spring = ViewBindings.findChildViewById(rootView, id);
      if (spring == null) {
        break missingId;
      }

      id = R.id.suggestions;
      Button suggestions = ViewBindings.findChildViewById(rootView, id);
      if (suggestions == null) {
        break missingId;
      }

      id = R.id.svelte;
      ConstraintLayout svelte = ViewBindings.findChildViewById(rootView, id);
      if (svelte == null) {
        break missingId;
      }

      id = R.id.textView1;
      TextView textView1 = ViewBindings.findChildViewById(rootView, id);
      if (textView1 == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      id = R.id.textView3;
      TextView textView3 = ViewBindings.findChildViewById(rootView, id);
      if (textView3 == null) {
        break missingId;
      }

      id = R.id.textView4;
      TextView textView4 = ViewBindings.findChildViewById(rootView, id);
      if (textView4 == null) {
        break missingId;
      }

      id = R.id.textView44;
      TextView textView44 = ViewBindings.findChildViewById(rootView, id);
      if (textView44 == null) {
        break missingId;
      }

      id = R.id.textView45;
      TextView textView45 = ViewBindings.findChildViewById(rootView, id);
      if (textView45 == null) {
        break missingId;
      }

      id = R.id.textView46;
      TextView textView46 = ViewBindings.findChildViewById(rootView, id);
      if (textView46 == null) {
        break missingId;
      }

      id = R.id.textView47;
      TextView textView47 = ViewBindings.findChildViewById(rootView, id);
      if (textView47 == null) {
        break missingId;
      }

      id = R.id.textView5;
      TextView textView5 = ViewBindings.findChildViewById(rootView, id);
      if (textView5 == null) {
        break missingId;
      }

      id = R.id.textView6;
      TextView textView6 = ViewBindings.findChildViewById(rootView, id);
      if (textView6 == null) {
        break missingId;
      }

      id = R.id.textView7;
      TextView textView7 = ViewBindings.findChildViewById(rootView, id);
      if (textView7 == null) {
        break missingId;
      }

      id = R.id.textView8;
      TextView textView8 = ViewBindings.findChildViewById(rootView, id);
      if (textView8 == null) {
        break missingId;
      }

      id = R.id.toolbar2;
      Toolbar toolbar2 = ViewBindings.findChildViewById(rootView, id);
      if (toolbar2 == null) {
        break missingId;
      }

      return new ActivityUpcomingCoursesBinding((ConstraintLayout) rootView, gatsby, imageView1,
          imageView26, imageView27, imageView3, imageView5, imageView7, micronaut, mocha, nuxt,
          spring, suggestions, svelte, textView1, textView2, textView3, textView4, textView44,
          textView45, textView46, textView47, textView5, textView6, textView7, textView8, toolbar2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
