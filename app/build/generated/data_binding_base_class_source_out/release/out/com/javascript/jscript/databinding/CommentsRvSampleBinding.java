// Generated by view binder compiler. Do not edit!
package com.javascript.jscript.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.airbnb.lottie.LottieAnimationView;
import com.javascript.jscript.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CommentsRvSampleBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final View commentedProfile;

  @NonNull
  public final TextView commentedText;

  @NonNull
  public final ImageView likes;

  @NonNull
  public final TextView likesCount;

  @NonNull
  public final LottieAnimationView likesLoves;

  @NonNull
  public final ImageView proBadge;

  @NonNull
  public final CircleImageView profileImage;

  @NonNull
  public final TextView time;

  @NonNull
  public final TextView userName;

  private CommentsRvSampleBinding(@NonNull ConstraintLayout rootView,
      @NonNull View commentedProfile, @NonNull TextView commentedText, @NonNull ImageView likes,
      @NonNull TextView likesCount, @NonNull LottieAnimationView likesLoves,
      @NonNull ImageView proBadge, @NonNull CircleImageView profileImage, @NonNull TextView time,
      @NonNull TextView userName) {
    this.rootView = rootView;
    this.commentedProfile = commentedProfile;
    this.commentedText = commentedText;
    this.likes = likes;
    this.likesCount = likesCount;
    this.likesLoves = likesLoves;
    this.proBadge = proBadge;
    this.profileImage = profileImage;
    this.time = time;
    this.userName = userName;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CommentsRvSampleBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CommentsRvSampleBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.comments_rv_sample, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CommentsRvSampleBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.commentedProfile;
      View commentedProfile = ViewBindings.findChildViewById(rootView, id);
      if (commentedProfile == null) {
        break missingId;
      }

      id = R.id.commentedText;
      TextView commentedText = ViewBindings.findChildViewById(rootView, id);
      if (commentedText == null) {
        break missingId;
      }

      id = R.id.likes;
      ImageView likes = ViewBindings.findChildViewById(rootView, id);
      if (likes == null) {
        break missingId;
      }

      id = R.id.likesCount;
      TextView likesCount = ViewBindings.findChildViewById(rootView, id);
      if (likesCount == null) {
        break missingId;
      }

      id = R.id.likes_loves;
      LottieAnimationView likesLoves = ViewBindings.findChildViewById(rootView, id);
      if (likesLoves == null) {
        break missingId;
      }

      id = R.id.proBadge;
      ImageView proBadge = ViewBindings.findChildViewById(rootView, id);
      if (proBadge == null) {
        break missingId;
      }

      id = R.id.profileImage;
      CircleImageView profileImage = ViewBindings.findChildViewById(rootView, id);
      if (profileImage == null) {
        break missingId;
      }

      id = R.id.time;
      TextView time = ViewBindings.findChildViewById(rootView, id);
      if (time == null) {
        break missingId;
      }

      id = R.id.userName;
      TextView userName = ViewBindings.findChildViewById(rootView, id);
      if (userName == null) {
        break missingId;
      }

      return new CommentsRvSampleBinding((ConstraintLayout) rootView, commentedProfile,
          commentedText, likes, likesCount, likesLoves, proBadge, profileImage, time, userName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
