// Generated by view binder compiler. Do not edit!
package com.javascript.jscript.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.javascript.jscript.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DemoCommentShimmerBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final View view27;

  @NonNull
  public final View view28;

  @NonNull
  public final View view29;

  @NonNull
  public final View view30;

  private DemoCommentShimmerBinding(@NonNull RelativeLayout rootView, @NonNull View view27,
      @NonNull View view28, @NonNull View view29, @NonNull View view30) {
    this.rootView = rootView;
    this.view27 = view27;
    this.view28 = view28;
    this.view29 = view29;
    this.view30 = view30;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DemoCommentShimmerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DemoCommentShimmerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.demo_comment_shimmer, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DemoCommentShimmerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.view27;
      View view27 = ViewBindings.findChildViewById(rootView, id);
      if (view27 == null) {
        break missingId;
      }

      id = R.id.view28;
      View view28 = ViewBindings.findChildViewById(rootView, id);
      if (view28 == null) {
        break missingId;
      }

      id = R.id.view29;
      View view29 = ViewBindings.findChildViewById(rootView, id);
      if (view29 == null) {
        break missingId;
      }

      id = R.id.view30;
      View view30 = ViewBindings.findChildViewById(rootView, id);
      if (view30 == null) {
        break missingId;
      }

      return new DemoCommentShimmerBinding((RelativeLayout) rootView, view27, view28, view29,
          view30);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
