// Generated by view binder compiler. Do not edit!
package com.javascript.jscript.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.airbnb.lottie.LottieAnimationView;
import com.cooltechworks.views.shimmer.ShimmerRecyclerView;
import com.javascript.jscript.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentDiscussBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout constraintLayout8;

  @NonNull
  public final View discussView;

  @NonNull
  public final TextView empty;

  @NonNull
  public final LottieAnimationView emptyList;

  @NonNull
  public final TextView emptyListText;

  @NonNull
  public final ImageView proBadge;

  @NonNull
  public final CircleImageView profileImage;

  @NonNull
  public final ShimmerRecyclerView rvDiscuss;

  @NonNull
  public final SwipeRefreshLayout swipeRefreshDiscuss;

  @NonNull
  public final TextView textView13;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final TextView userName;

  private FragmentDiscussBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout constraintLayout8, @NonNull View discussView,
      @NonNull TextView empty, @NonNull LottieAnimationView emptyList,
      @NonNull TextView emptyListText, @NonNull ImageView proBadge,
      @NonNull CircleImageView profileImage, @NonNull ShimmerRecyclerView rvDiscuss,
      @NonNull SwipeRefreshLayout swipeRefreshDiscuss, @NonNull TextView textView13,
      @NonNull Toolbar toolbar, @NonNull TextView userName) {
    this.rootView = rootView;
    this.constraintLayout8 = constraintLayout8;
    this.discussView = discussView;
    this.empty = empty;
    this.emptyList = emptyList;
    this.emptyListText = emptyListText;
    this.proBadge = proBadge;
    this.profileImage = profileImage;
    this.rvDiscuss = rvDiscuss;
    this.swipeRefreshDiscuss = swipeRefreshDiscuss;
    this.textView13 = textView13;
    this.toolbar = toolbar;
    this.userName = userName;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentDiscussBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentDiscussBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_discuss, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentDiscussBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.constraintLayout8;
      ConstraintLayout constraintLayout8 = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout8 == null) {
        break missingId;
      }

      id = R.id.discuss_view;
      View discussView = ViewBindings.findChildViewById(rootView, id);
      if (discussView == null) {
        break missingId;
      }

      id = R.id.empty;
      TextView empty = ViewBindings.findChildViewById(rootView, id);
      if (empty == null) {
        break missingId;
      }

      id = R.id.emptyList;
      LottieAnimationView emptyList = ViewBindings.findChildViewById(rootView, id);
      if (emptyList == null) {
        break missingId;
      }

      id = R.id.emptyListText;
      TextView emptyListText = ViewBindings.findChildViewById(rootView, id);
      if (emptyListText == null) {
        break missingId;
      }

      id = R.id.proBadge;
      ImageView proBadge = ViewBindings.findChildViewById(rootView, id);
      if (proBadge == null) {
        break missingId;
      }

      id = R.id.profileImage;
      CircleImageView profileImage = ViewBindings.findChildViewById(rootView, id);
      if (profileImage == null) {
        break missingId;
      }

      id = R.id.rv_discuss;
      ShimmerRecyclerView rvDiscuss = ViewBindings.findChildViewById(rootView, id);
      if (rvDiscuss == null) {
        break missingId;
      }

      id = R.id.swipeRefreshDiscuss;
      SwipeRefreshLayout swipeRefreshDiscuss = ViewBindings.findChildViewById(rootView, id);
      if (swipeRefreshDiscuss == null) {
        break missingId;
      }

      id = R.id.textView13;
      TextView textView13 = ViewBindings.findChildViewById(rootView, id);
      if (textView13 == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.userName;
      TextView userName = ViewBindings.findChildViewById(rootView, id);
      if (userName == null) {
        break missingId;
      }

      return new FragmentDiscussBinding((ConstraintLayout) rootView, constraintLayout8, discussView,
          empty, emptyList, emptyListText, proBadge, profileImage, rvDiscuss, swipeRefreshDiscuss,
          textView13, toolbar, userName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
